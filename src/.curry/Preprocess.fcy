Prog "Preprocess" ["Char","Prelude"] [] [Func ("Preprocess","isTerminalPunctuation") 1 Public (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","==") [Var 1,Lit (Charc  '.')],Comb FuncCall ("Prelude","||") [Comb FuncCall ("Prelude","==") [Var 1,Lit (Charc  '!')],Comb FuncCall ("Prelude","==") [Var 1,Lit (Charc  '?')]]])),Func ("Preprocess","sentences") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("Prelude","[]") []) (Comb ConsCall ("Prelude","[]") []),Branch (Pattern ("Prelude",":") [2,3]) (Let [(4,Comb FuncCall ("Preprocess","sentences") [Var 3])] (Case  Rigid (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Preprocess","isTerminalPunctuation") [Var 2],Comb FuncCall ("Prelude","null") [Var 4]]) [Branch (Pattern ("Prelude","True") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Var 2,Comb ConsCall ("Prelude","[]") []],Var 4]),Branch (Pattern ("Prelude","False") []) (Comb ConsCall ("Prelude",":") [Comb ConsCall ("Prelude",":") [Var 2,Comb FuncCall ("Prelude","head") [Var 4]],Comb FuncCall ("Prelude","tail") [Var 4]])]))])),Func ("Preprocess","stripPunctuation") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Comb FuncCall ("Prelude","filter") [Comb (FuncPartCall 1) ("Preprocess","stripPunctuation._#lambda1") [],Var 1])),Func ("Preprocess","stripPunctuation._#lambda1") 1 Private (FuncType (TCons ("Prelude","Char") []) (TCons ("Prelude","Bool") [])) (Rule [1] (Comb FuncCall ("Prelude","||") [Comb FuncCall ("Char","isAlpha") [Var 1],Comb FuncCall ("Char","isSpace") [Var 1]])),Func ("Preprocess","decapitalize") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Comb FuncCall ("Prelude","map") [Comb (FuncPartCall 1) ("Char","toLower") [],Var 1]))] []