Prog "BinarySort" ["Prelude"] [] [Func ("BinarySort","pivot") 1 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","Int") [])) (Rule [] (Var 0)),Func ("BinarySort","split") 1 Public (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TVar 0],TVar 0,TCons ("Prelude","[]") [TVar 0]])) (Rule [] (Var 0)),Func ("BinarySort","split'") 3 Public (FuncType (FuncType (TVar 0) (TCons ("Prelude","Bool") [])) (FuncType (FuncType (TVar 0) (TCons ("Prelude","Bool") [])) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","(,,)") [TCons ("Prelude","[]") [TVar 0],TCons ("Prelude","Maybe") [TVar 0],TCons ("Prelude","[]") [TVar 0]])))) (Rule [] (Var 0)),Func ("BinarySort","merge") 3 Public (FuncType (FuncType (TVar 0) (FuncType (TVar 0) (TCons ("Prelude","Bool") []))) (FuncType (TCons ("Prelude","[]") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TVar 0]) (TCons ("Prelude","[]") [TVar 0])))) (Rule [] (Var 0))] []