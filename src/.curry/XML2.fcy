Prog "XML2" ["List","Prelude","XML"] [] [Func ("XML2","getAttribs") 1 Public (FuncType (TCons ("XML","XmlExp") []) (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]])) (Rule [1] (Case  Flex (Var 1) [Branch (Pattern ("XML","XElem") [2,3,4]) (Var 3)])),Func ("XML2","getAttrib") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("XML","XmlExp") []) (TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]))) (Rule [1] (Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","lookup") [Var 1],Comb (FuncPartCall 1) ("XML2","getAttribs") []])),Func ("XML2","addElem") 2 Public (FuncType (TCons ("XML","XmlExp") []) (FuncType (TCons ("XML","XmlExp") []) (TCons ("XML","XmlExp") []))) (Rule [1,2] (Case  Flex (Var 1) [Branch (Pattern ("XML","XElem") [3,4,5]) (Comb ConsCall ("XML","XElem") [Var 3,Var 4,Comb ConsCall ("Prelude",":") [Var 2,Var 5]])])),Func ("XML2","getElemsByTagName") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("XML","XmlExp") []) (TCons ("Prelude","[]") [TCons ("XML","XmlExp") []]))) (Rule [1] (Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","filter") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","==") [Var 1],Comb (FuncPartCall 1) ("XML","tagOf") []]],Comb (FuncPartCall 1) ("XML","elemsOf") []])),Func ("XML2","getElemByTagName") 1 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("XML","XmlExp") []) (TCons ("Prelude","Maybe") [TCons ("XML","XmlExp") []]))) (Rule [1] (Comb FuncCall ("Prelude",".") [Comb FuncCall ("List","find") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","==") [Var 1],Comb (FuncPartCall 1) ("XML","tagOf") []]],Comb (FuncPartCall 1) ("XML","elemsOf") []])),Func ("XML2","getTextByTagName") 0 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("XML","XmlExp") []) (TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]))) (Rule [] (Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","map") [Comb (FuncPartCall 1) ("XML2","getTextByTagName._#lambda1") []]],Comb (FuncPartCall 1) ("XML2","getElemsByTagName") []])),Func ("XML2","getTextByTagName._#lambda1") 1 Private (FuncType (TCons ("XML","XmlExp") []) (TCons ("Prelude","[]") [TCons ("Prelude","Char") []])) (Rule [1] (Comb FuncCall ("Prelude","apply") [Comb FuncCall ("XML","textOf") [],Comb ConsCall ("Prelude",":") [Var 1,Comb ConsCall ("Prelude","[]") []]])),Func ("XML2","deleteElemsByTagName") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","Char") []]) (FuncType (TCons ("XML","XmlExp") []) (TCons ("XML","XmlExp") []))) (Rule [1,2] (Case  Flex (Var 2) [Branch (Pattern ("XML","XElem") [3,4,5]) (Comb FuncCall ("Prelude","$") [Comb (ConsPartCall 1) ("XML","XElem") [Var 3,Var 4],Comb FuncCall ("Prelude","filter") [Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","not") [],Comb FuncCall ("Prelude",".") [Comb (FuncPartCall 1) ("Prelude","==") [Var 1],Comb (FuncPartCall 1) ("XML","tagOf") []]],Var 5]])]))] []