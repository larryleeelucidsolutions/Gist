Prog "Rewrite" ["Maybe","Prelude","Parser"] [TypeSyn ("Rewrite","Binding") Public [0] (TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]]),TypeSyn ("Rewrite","Pattern") Public [] (TCons ("Prelude","[]") [TCons ("Rewrite","PatternToken") []]),TypeSyn ("Rewrite","Template") Public [] (TCons ("Prelude","[]") [TCons ("Rewrite","TemplateToken") []]),Type ("Rewrite","Token") Public [0] [Cons ("Rewrite","Terminal") 2 Public [TVar 0,TCons ("Prelude","Int") []],Cons ("Rewrite","Nonterminal") 2 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]]]],Type ("Rewrite","PatternToken") Public [] [Cons ("Rewrite","PatternToken") 3 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],TCons ("Prelude","[]") [TCons ("Prelude","Maybe") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]],Type ("Rewrite","TemplateToken") Public [] [Cons ("Rewrite","RefTemplateToken") 1 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]],Cons ("Rewrite","TemplateToken") 2 Public [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []]]]]],Type ("Rewrite","Rule") Public [] [Cons ("Rewrite","Rule") 2 Public [TCons ("Prelude","[]") [TCons ("Rewrite","PatternToken") []],TCons ("Prelude","[]") [TCons ("Rewrite","TemplateToken") []]]]] [Func ("Rewrite","terminalValue") 1 Public (FuncType (TCons ("Rewrite","Token") [TVar 0]) (TVar 0)) (Rule [] (Var 0)),Func ("Rewrite","terminalPos") 1 Public (FuncType (TCons ("Rewrite","Token") [TVar 0]) (TCons ("Prelude","Int") [])) (Rule [] (Var 0)),Func ("Rewrite","bindPatternToken") 3 Public (FuncType (TCons ("Rewrite","PatternToken") []) (FuncType (TCons ("Rewrite","Token") [TVar 0]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]]]) (TCons ("Prelude","Success") [])))) (Rule [] (Var 0)),Func ("Rewrite","bindPattern") 3 Public (FuncType (TCons ("Prelude","[]") [TCons ("Rewrite","PatternToken") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]) (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]]]) (TCons ("Prelude","Success") [])))) (Rule [] (Var 0)),Func ("Rewrite","instantiateTemplateToken") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]]]) (FuncType (TCons ("Rewrite","TemplateToken") []) (TCons ("Rewrite","Token") [TVar 0]))) (Rule [] (Var 0)),Func ("Rewrite","instantiateTemplate") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Prelude","(,)") [TCons ("Prelude","[]") [TCons ("Prelude","Char") []],TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]]]) (FuncType (TCons ("Prelude","[]") [TCons ("Rewrite","TemplateToken") []]) (TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]))) (Rule [] (Var 0)),Func ("Rewrite","reduceHeadUsingRule") 2 Public (FuncType (TCons ("Rewrite","Rule") []) (FuncType (TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]) (TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]))) (Rule [] (Var 0)),Func ("Rewrite","reduceHead") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Rewrite","Rule") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]) (TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]))) (Rule [] (Var 0)),Func ("Rewrite","reduce") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Rewrite","Rule") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]) (TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]))) (Rule [] (Var 0)),Func ("Rewrite","reduce'") 2 Public (FuncType (TCons ("Prelude","[]") [TCons ("Rewrite","Rule") []]) (FuncType (TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]) (TCons ("Prelude","[]") [TCons ("Rewrite","Token") [TVar 0]]))) (Rule [] (Var 0))] []